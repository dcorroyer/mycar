version: "3.8"

services:
  php:
    container_name: app_php
    build:
      context: ./docker/php
    ports:
      - "9001:9000"
    volumes:
      - .:/var/www/app
    networks:
      - app

  nginx:
    container_name: app_nginx
    image: nginx:stable-alpine
    ports:
      - "8081:80"
    volumes:
      - .:/var/www/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app

  mysql:
    container_name: app_mysql
    image: mysql:8
    ports:
      - "4306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/mysql/init.sql:/data/application/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-file /data/application/init.sql
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - app

  phpmyadmin:
    container_name: app_phpmyadmin
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    links:
      - mysql
    restart: always
    ports:
      - "8888:80"
    environment:
      PMA_HOST: mysql
    networks:
      - app

  npm:
    container_name: app_npm
    image: node:18-alpine
    volumes:
      - .:/var/www/app
    entrypoint: ["npm"]
    working_dir: /var/www/app
    networks:
      - app

  mailhog:
    container_name: app_mailhog
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - "1026:1025"
      - "8026:8025"
    networks:
      - app

networks:
  app:

volumes:
  db-data:
